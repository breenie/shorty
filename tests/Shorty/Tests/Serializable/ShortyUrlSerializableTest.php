<?php
/**
 * - ShortyUrlSerializableTest.php
 *
 * @author  chris
 * @created 10/09/15 12:18
 */
namespace Shorty\Tests\Serializable;

use Shorty\Model\ShortyUrl;
use Shorty\Serializable\ShortyUrlSerializable;

class ShortyUrlSerializableTest extends \PHPUnit_Framework_TestCase
{
    /**
     * A short URL fixture.
     *
     * @var ShortyUrl
     */
    private $fixture;

    /**
     * Tests the null URL generator.
     */
    public function testEmptyUrlGenerator()
    {
        $serializer = new ShortyUrlSerializable($this->fixture);
        $this->assertEquals('http://localhost/Ak', $serializer->generateUrl());
    }

    /**
     * Tests the URL generator.
     */
    public function testUrlGenerator()
    {
        $generator = $this->getMockBuilder('Symfony\Component\Routing\Generator\UrlGenerator')
            ->setMethods(['generate'])
            ->disableOriginalConstructor()
            ->getMock();

        $generator->method('generate')
            ->will($this->returnValue('http://example.com/Ak'));

        $serializer = new ShortyUrlSerializable($this->fixture, $generator);
        $this->assertEquals('http://example.com/Ak', $serializer->generateUrl());
    }

    /**
     * Tests the serializer.
     */
    public function testSerialize()
    {
        $serializer = new ShortyUrlSerializable($this->fixture);
        $this->assertEquals(
            '{"hash":"Ak","long_url":"http:\/\/example.com","short_url":"http:\/\/localhost\/Ak","clicks":0,"created":"2015-01-01T00:00:01+00:00"}',
            json_encode($serializer)
        );
    }

    /**
     * @inheritDoc
     */
    protected function setUp()
    {
        $this->fixture = new ShortyUrl(
            ['id' => 666, 'url' => 'http://example.com', 'clicks' => 0, 'created' => '2015-01-01 00:00:01']
        );
        parent::setUp();
    }

    /**
     * @inheritDoc
     */
    protected function tearDown()
    {
        $this->fixture = null;
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
